{"version":3,"sources":["components/Header/Header.jsx","components/LogIn/LogIn.jsx","api/api.js","api/posts.js","components/EditPost/EditPost.jsx","components/NewPostForm/NewPostForm.jsx","components/PostList/PostList.jsx","components/UserLIst/UsersList.jsx","api/users.js","components/Main/Main.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Header","React","memo","onChangeHeader","logInChange","className","onClick","LogIn","onSingIn","useState","name","setName","password","setPassword","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","required","BASE_URL","requests","url","option","fetch","then","response","json","adress","EditPost","onAdd","userId","post","title","setTitle","body","setBody","id","Math","random","NewPosyForm","deletePost","addPost","isEditing","setEditing","PostList","posts","setPosts","loadPosts","getUserPosts","useEffect","state","filter","length","map","UsersList","users","setUsers","query","setQuery","setUserId","visibileUsers","user","toLowerCase","includes","handleInput","email","clNames","handleUserId","phone","Main","logInVisibl","App","setLogInVisibl","useCallback","UserName","handleHeader","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gUAKaA,EAASC,IAAMC,MAC1B,YAAsC,IAAnCC,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,YAEjB,OACE,yBAAQC,UAAU,SAAlB,UACE,sBAAMA,UAAU,iBAAhB,oBAICD,EACC,KAEA,sBACEC,UAAU,kBACVC,QAAS,kBAAMH,KAFjB,4BCbGI,G,MAAQN,IAAMC,MACzB,YAAmB,IAAhBM,EAAe,EAAfA,SACD,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,qBAAhC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEA,OACE,mCACE,uBACER,UAAU,OACVS,SAAU,SAACC,GACTA,EAAMC,iBACNR,EAASE,GAAOE,IAJpB,UAOE,uBACEK,KAAK,OACLZ,UAAU,aACVa,YAAY,kBACZC,MAAOT,EACPU,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACXV,EAAQU,EAAOF,QAEjBG,UAAQ,IAGV,uBACEL,KAAK,WACLZ,UAAU,iBACVa,YAAY,iBACZC,MAAOP,EACPQ,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACXR,EAAYQ,EAAOF,QAErBG,UAAQ,IAEV,wBACEL,KAAK,SACLZ,UAAU,eAFZ,8B,uBCvCJkB,G,MAAW,wCAEJC,EAAW,SAACC,GAAsB,IAAjBC,EAAgB,uDAAP,GACrC,OAAOC,MAAMJ,EAAWE,EAAKC,GAC1BE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,W,OCFzBC,G,MAAS,UCEFC,G,MAAW,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,OAA0B,IAAlBC,YAAkB,MAAX,KAAW,EACxD,EAA0B1B,mBAAS0B,EAAOA,EAAKC,MAAQ,IAAvD,mBAAOA,EAAP,KAAcC,EAAd,KACA,EAAwB5B,mBAAS0B,EAAOA,EAAKG,KAAO,IAApD,mBAAOA,EAAP,KAAaC,EAAb,KAcF,OACE,uBACElC,UAAU,cACVS,SAAU,SAACC,GACTA,EAAMC,iBAfRiB,EAAM,CACJG,QACAE,KAAMA,EACNJ,SACAM,GAAIC,KAAKC,WAGXL,EAAS,IACTE,EAAQ,KAIV,UAOE,uBACEtB,KAAK,OACLZ,UAAU,QACVa,YAAY,eACZC,MAAOiB,EACPhB,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBgB,EAAShB,EAAOF,UAE5C,0BACED,YAAY,iBACZb,UAAU,WACVc,MAAOmB,EACPlB,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBkB,EAAQlB,EAAOF,UAG3C,wBACEF,KAAK,SACLZ,UAAU,iBAFZ,yBCrCOsC,EAAc,SAAC,GAAmC,IAAjCR,EAAgC,EAAhCA,KAAMS,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QAC9C,EAAgCpC,oBAAS,GAAzC,mBAAOqC,EAAP,KAAkBC,EAAlB,KAEA,OACE,mCACGD,EACC,qCACE,cAAC,EAAD,CACEX,KAAMA,EACNF,MAAOY,EACPE,WAAYA,IAEd,wBACEzC,QAAS,WACPyC,GAAW,IAEb1C,UAAU,iBAJZ,uBAUF,qCACA,mBAAGA,UAAU,eAAb,SACG8B,EAAKC,QAER,mBAAG/B,UAAU,cAAb,SACG8B,EAAKG,OAER,wBACEjC,UAAU,gBACVC,QAAS,kBAAMsC,EAAWT,EAAKK,KAFjC,oBAMA,wBACEnC,UAAU,cACVC,QAAS,kBAAMyC,GAAW,IAF5B,+BC/BKC,EAAW/C,IAAMC,MAC5B,YAAiB,IAAdgC,EAAa,EAAbA,OACD,EAA0BzB,mBAAS,IAAnC,mBAAOwC,EAAP,KAAcC,EAAd,KAEMC,EAAY,YHTM,SAACjB,GAC3B,OAAOV,EAAS,GAAD,OAAIO,EAAJ,mBAAqBG,KGShCkB,CAAalB,GACVN,KAAKsB,IAGVG,qBAAU,WACRF,MACC,CAACjB,IAOJ,IAAMW,EAAU,SAACP,GACfY,GAAS,SAAAI,GAAK,4BAAQA,GAAR,CAAehB,QAGzBM,EAAa,SAACJ,GAClBU,GAAS,SAAAI,GAAK,OAAIA,EAAMC,QAAO,SAAApB,GAAI,OAAIA,EAAKK,KAAOA,SAQvD,OACE,sBAAKnC,UAAU,QAAf,UACE,cAAC,EAAD,CACE4B,MAAOY,EACPX,OAAQA,IAGV,oBAAI7B,UAAU,cAAd,SACoB,IAAjB4C,EAAMO,OACLP,EAAMQ,KAAI,SAAAtB,GAAI,OACZ,oBAAkB9B,UAAU,cAA5B,SACE,cAAC,EAAD,CACEwC,QAASA,EACTV,KAAMA,EACNS,WAAYA,KAJPT,EAAKK,OAShB,mBAAGnC,UAAU,cAAb,oCC9CGqD,EAAYzD,IAAMC,MAC7B,YAAS,eACP,MAA0BO,mBAAS,IAAnC,mBAAOkD,EAAP,KAAcC,EAAd,KACA,EAA0BnD,mBAAS,IAAnC,mBAAOoD,EAAP,KAAcC,EAAd,KACA,EAA4BrD,mBAAS,GAArC,mBAAOyB,EAAP,KAAe6B,EAAf,KAEAV,qBAAU,WCdL7B,EAHM,UDkBEI,KAAKgC,KACf,IAEH,IAAMI,EAAgBL,EAAMJ,QACxB,SAAAU,GAAI,OAAIA,EAAKvD,KAAKwD,cAAcC,SAASN,EAAMK,kBAenD,OACE,sBAAK7D,UAAU,QAAf,UACE,gCACE,uBACEY,KAAK,OACLZ,UAAU,gBACVa,YAAY,cACZC,MAAO0C,EACPzC,SAAU,mBApBE,SAACC,GACnByC,EAASzC,EAAOF,OAmBciD,CAAd,EAAE/C,WAEd,wBACEhB,UAAU,gBACVC,QApBM,WACZwD,EAAS,KAiBL,mBAMA,oBAAIzD,UAAU,cAAd,SACoB,IAAjBsD,EAAMH,OACLQ,EAAcP,KAAI,SAAAQ,GAAI,OACpB,qBAAkB5D,UAAU,cAA5B,UACE,sBAAMA,UAAU,cAAhB,SACG4D,EAAKvD,OAER,sBAAML,UAAU,eAAhB,SACG4D,EAAKI,QAER,wBACEhE,UAAWiE,IAAQ,gBAAiB,CAClC,wBAAyBpC,IAAW+B,EAAKzB,KAE3ClC,QAAS,WACH2D,EAAKzB,KAAON,EAnCb,SAACA,GACpB6B,EAAU7B,GAmCQqC,CAAaN,EAAKzB,IAElBuB,EAAU,IARhB,2BAcA,sBAAM1D,UAAU,eAAhB,SACG4D,EAAKO,UAtBDP,EAAKzB,OA2BhB,sBAAMnC,UAAU,UAAhB,6BAMJ,8BACE,cAAC,EAAD,CAAU6B,OAAQA,YEtFjBuC,EAAOxE,IAAMC,MACxB,YAAgC,IAA7BM,EAA4B,EAA5BA,SAAUkE,EAAkB,EAAlBA,YAEb,OACE,+BACGA,EACC,cAAC,EAAD,CACElE,SAAUA,IAGZ,qBAAKH,UAAU,OAAf,SACE,cAACqD,EAAD,WCkBKiB,EA5BH,WACV,MAAsClE,oBAAS,GAA/C,mBAAOiE,EAAP,KAAoBE,EAApB,KAEMpE,EAAWqE,uBAAY,SAACC,EAAUlE,GACrB,SAAbkE,GAAoC,OAAblE,GACzBgE,GAAe,MAIbG,EAAeF,uBAAY,WAC/BD,GAAe,MAGjB,OACE,sBAAKvE,UAAU,YAAf,UACE,cAAC,EAAD,CACEF,eAAgB4E,EAChB3E,YAAasE,IAGf,cAACD,EAAD,CACEC,YAAaA,EACblE,SAAUA,QCjBHwE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtD,MAAK,YAAkD,IAA/CuD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.1a91937f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Header.scss';\n\nexport const Header = React.memo(\n  ({ onChangeHeader, logInChange }) => {\n\n    return (\n      <header className='header'>\n        <span className='header__welcom'>\n          Welcom\n        </span>\n  \n        {logInChange ? (\n          null\n        ) : (\n          <span\n            className=\"header__signOut\"\n            onClick={() => onChangeHeader()}\n          >\n            Sign out\n          </span>\n        )}\n      </header>\n    )\n  }\n)\n\nHeader.propTypes = {\n  onChangeHeader: PropTypes.func.isRequired,\n  logInChange: PropTypes.bool.isRequired,\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './LogIn.scss';\n\nexport const LogIn = React.memo(\n  ({ onSingIn }) => {\n    const [name, setName] = useState('');\n    const [password, setPassword] = useState();\n\n    return (\n      <>\n        <form\n          className=\"form\"\n          onSubmit={(event) => {\n            event.preventDefault();\n            onSingIn(name, +password);\n          }}\n        >\n          <input\n            type=\"text\"\n            className=\"form__text\"\n            placeholder=\"User name: ivan\"\n            value={name}\n            onChange={({ target }) => {\n              setName(target.value)\n            }}\n            required\n          />\n\n          <input\n            type=\"password\"\n            className=\"form__password\"\n            placeholder=\"Password: 1111\"\n            value={password}\n            onChange={({ target }) => {\n              setPassword(target.value)\n            }}\n            required\n          />\n          <button\n            type=\"submit\"\n            className=\"form__submit\"\n          >\n            Sing in\n          </button>\n        </form>\n      </>\n    );\n  }\n);\n\nLogIn.propTypes = {\n  onSingIn: PropTypes.func.isRequired,\n}\n","const BASE_URL = 'https://jsonplaceholder.typicode.com';\n\nexport const requests = (url, option = {}) => {\n  return fetch(BASE_URL + url, option)\n    .then(response => response.json())\n}\n\nexport const post = (url, data) => {\n  return requests(url, {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n  });\n};\n","import { requests, post } from './api';\n\nconst adress = '/posts';\n\nexport const getUserPosts = (userId) => {\n  return requests(`${adress}?userId=${userId}`);\n};\n\nexport const removePost = (postId) => {\n  return requests(`${adress}/${postId}`, {\n    method: 'DELETE',\n  })\n};\n\nexport const editPost = (id) => {\n  return post(`${adress}?id=${id}`)\n};\n\nexport const creatPost = (body) => {\n  return post(adress, body);\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './EditPost.scss';\n\nexport const EditPost = ({ onAdd, userId, post = null }) => {\n    const [title, setTitle] = useState(post ? post.title : '');\n    const [body, setBody] = useState(post ? post.body : '');\n\n    const addNewPost = () => {\n      onAdd({\n        title,\n        body: body,\n        userId,\n        id: Math.random(),\n      });\n\n      setTitle('');\n      setBody('');\n    };\n\n  return (\n    <form\n      className=\"form_submit\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        addNewPost();\n      }}\n    >\n      <input\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Type a title\"\n        value={title}\n        onChange={({ target }) => setTitle(target.value)}\n      />\n      <textarea\n        placeholder=\"Type body here\"\n        className=\"textarea\"\n        value={body}\n        onChange={({ target }) => setBody(target.value)}\n      >        \n      </textarea>\n      <button\n        type=\"submit\"\n        className=\"submit__button\"\n      >\n        Submit\n      </button>\n    </form>\n  );\n};\n\nEditPost.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n  userId: PropTypes.number.isRequired,\n  post: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n  })\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {EditPost} from '../EditPost';\n\nexport const NewPosyForm = ({ post, deletePost, addPost }) => {\n  const [isEditing, setEditing] = useState(false);\n\n  return (\n    <>\n      {isEditing ? (\n        <>\n          <EditPost\n            post={post}\n            onAdd={addPost}\n            setEditing={setEditing}\n          />\n          <button\n            onClick={() => {\n              setEditing(false)\n            }}\n            className=\"submit__button\"\n          >\n            Cansel\n          </button>\n        </>\n      ) : (\n        <>\n        <p className=\"posts__title\">\n          {post.title}\n        </p>\n        <p className=\"posts__body\">\n          {post.body}\n        </p>\n        <button\n          className=\"posts__delete\"\n          onClick={() => deletePost(post.id)}\n        >\n          Delete\n        </button>\n        <button\n          className=\"posts__edit\"\n          onClick={() => setEditing(true)}\n        >\n          Edit a post\n        </button>\n        </>\n      )}\n    </>\n  )\n};\n\nNewPosyForm.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n  deletePost: PropTypes.func.isRequired,\n  addPost: PropTypes.func.isRequired,\n}\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PostList.scss';\n\nimport { getUserPosts, creatPost, removePost } from '../../api/posts';\nimport { EditPost } from '../EditPost';\nimport { NewPosyForm } from '../NewPostForm';\n\nexport const PostList = React.memo(\n  ({ userId }) => {\n    const [posts, setPosts] = useState([]);\n\n    const loadPosts = () => {\n      getUserPosts(userId)\n        .then(setPosts)\n    }\n\n    useEffect(() => { \n      loadPosts()\n    }, [userId]);\n\n    // const addPost = async(body) => {\n    //   await creatPost(body);\n    //   loadPosts();\n    // }\n\n    const addPost = (body) => {\n      setPosts(state => [...state, body])\n    }\n\n    const deletePost = (id) => {\n      setPosts(state => state.filter(post => post.id !== id));\n    }\n\n    // const deletePost = async(id) => {\n    //   await removePost(id);\n    //   loadPosts();\n    // }\n\n  return (\n    <div className=\"posts\">\n      <EditPost\n        onAdd={addPost}\n        userId={userId}\n      />\n\n      <ul className=\"posts__list\">\n        {posts.length !== 0 ? (\n          posts.map(post => (\n            <li key={post.id} className=\"posts__item\">\n              <NewPosyForm\n                addPost={addPost}\n                post={post}\n                deletePost={deletePost}\n              />\n            </li>\n          ))\n        ) : (\n          <p className=\"posts__text\">\n            Choose a user)\n          </p>\n        )}\n      </ul>\n    </div>\n  );\n});\n\nPostList.propTypes = {\n  userId: PropTypes.number.isRequired,\n};\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clNames from 'classnames';\n\nimport './UserList.scss';\n\nimport { getUsers } from '../../api/users';\nimport { PostList } from '../PostList';\n\nexport const UsersList = React.memo(\n  ({}) => {\n    const [users, setUsers] = useState([]);\n    const [query, setQuery] = useState('');\n    const [userId, setUserId] = useState(0)\n\n    useEffect(() => {\n      getUsers().then(setUsers);\n    }, []);\n\n    const visibileUsers = users.filter(\n        user => user.name.toLowerCase().includes(query.toLowerCase())\n    );\n\n    const handleInput = (target) => {\n      setQuery(target.value);\n    };\n\n    const clear = () => {\n      setQuery('');\n    };\n\n    const handleUserId = (userId) => {\n      setUserId(userId);\n    };\n\n    return (\n      <div className=\"users\">\n        <div>\n          <input\n            type=\"text\"\n            className=\"users__search\"\n            placeholder=\"Search user\"\n            value={query}\n            onChange={({target}) => handleInput(target)}\n          />\n          <button\n            className=\"users__buuton\"\n            onClick={clear}\n          >\n            Clear\n          </button>\n          <ul className=\"users__list\">\n            {users.length !== 0 ? (\n              visibileUsers.map(user => (\n                <li key={user.id} className=\"users__item\">\n                  <span className=\"users__name\">\n                    {user.name}\n                  </span>\n                  <span className=\"users__email\">\n                    {user.email}\n                  </span>\n                  <button\n                    className={clNames(\"users__choose\", {\n                      \"users__choose--active\": userId === user.id,\n                    })}\n                    onClick={() => {\n                      if (user.id !== userId) {\n                        handleUserId(user.id)\n                      } else {\n                        setUserId(0)\n                      }\n                    }}\n                  >\n                    Choose a user\n                  </button>\n                  <span className=\"users__phone\">\n                    {user.phone}\n                  </span>\n                </li>\n              ))\n            ) : (\n              <span className=\"louding\">\n                Louding...\n              </span>\n            )}\n          </ul>\n          </div>\n          <div>\n            <PostList userId={userId}/>\n          </div>\n      </div>\n    );\n  }\n);\n","import { requests } from './api';\n\nconst adress = '/users';\n\nexport const getUsers = () => {\n  return requests(adress)\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LogIn } from '../LogIn';\nimport { UsersList } from '../UserLIst';\n\nexport const Main = React.memo(\n  ({ onSingIn, logInVisibl }) => {\n\n  return (\n    <main>\n      {logInVisibl ? (\n        <LogIn\n          onSingIn={onSingIn}\n        />\n      ) : (\n        <div className=\"list\">\n          <UsersList />\n        </div>\n      )}\n    </main>\n  );\n}\n);\n\nMain.propTypes = {\n  onSingIn: PropTypes.func.isRequired,\n  logInVisibl: PropTypes.bool.isRequired,\n};\n","import React, {useCallback, useState} from 'react';\n\nimport './App.scss';\n\nimport { Header } from './components/Header';\nimport { Main} from './components/Main';\n\nconst App = () => {\n  const [logInVisibl, setLogInVisibl] = useState(true);\n\n  const onSingIn = useCallback((UserName, password) => {\n    if (UserName === 'ivan' && password === 1111) {\n      setLogInVisibl(false);\n    };\n  });\n\n  const handleHeader = useCallback(() => {\n    setLogInVisibl(true);\n  });\n\n  return (\n    <div className=\"container\">\n      <Header\n        onChangeHeader={handleHeader}\n        logInChange={logInVisibl}\n      />\n\n      <Main\n        logInVisibl={logInVisibl}\n        onSingIn={onSingIn}\n      />\n    </div>\n  )\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}